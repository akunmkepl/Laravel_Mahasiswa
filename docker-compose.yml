version: '3.8'

services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    image: laraveldocker
    container_name: laraveldocker
    restart: unless-stopped
    tty: true
    environment:
      SERVICE_NAME: app
    working_dir: /var/www/laraveldocker
    
    volumes:
      - .:/var/www/laraveldocker
      - ./storage/php.ini:/usr/local/etc/php/conf.d/local.ini
    networks:
      - laraveldocker
    command: >
      sh -c "php artisan key:generate &&
             php artisan config:clear &&
             php-fpm"

  webserver:
    image: nginx:alpine
    container_name: nginxlaraveldocker
    restart: unless-stopped
    tty: true
    ports:
      - "80:80"
    volumes:
      - .:/var/www/laraveldocker
      - ./storage/:/etc/nginx/conf.d/
    networks:
      - laraveldocker

  db:
    image: mysql:5.7
    container_name: dblaraveldocker
    restart: always
    tty: true
    ports:
      - "3306:3306"
    volumes:
      - "lbdata:/var/lib/mysql"
    environment:
      MYSQL_ROOT_PASSWORD: laraveldocker
      MYSQL_PASSWORD: ""
      SERVICE_TAGS: dev
      SERVICE_NAME: mysql
      MYSQL_DATABASE: akademik
      MYSQL_USER: root
    networks:
      - laraveldocker

  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    container_name: pmalaraveldocker
    environment:
      PMA_HOST: db
    restart: always
    ports:
      - "8080:80"
    networks:
      - laraveldocker

networks:
  laraveldocker:
    driver: bridge

volumes:
  lbdata:
    driver: local
